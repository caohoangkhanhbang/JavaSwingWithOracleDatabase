/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlfile.FORM;
import java.sql.Connection;
import java.sql.DriverManager;
import Class.JDBCConnection;
import Class.SYSConnection;
import Class.UserSessionData;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.sql.Timestamp;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.sql.CallableStatement;
import java.util.concurrent.ExecutionException;
import oracle.jdbc.OracleTypes;
import javax.swing.SwingWorker;


public class MainForm extends javax.swing.JFrame {
    private JDBCConnection databaseConnection = new JDBCConnection();
    private SYSConnection sysConnection=new SYSConnection();
    private String username;
    private Connection connection;
    private Connection connection2;
    
    public MainForm() {
        connection = databaseConnection.getConnection();
        connection2=sysConnection.getConnection();
        initComponents();
        CheckSessionWorker sessionWorker = new CheckSessionWorker(this);
        sessionWorker.execute();
        
    }
    
    public void setUsername(String username) {
        this.username = username;
        lblHienthi.setText("Xin chào "+username +" !");
    }
    public void setTime(String username){
        this.username=username;
        try {
            Statement statement=connection2.createStatement();
            ResultSet resultSet=statement.executeQuery("Select LAST_LOGIN FROM dba_users WHERE USERNAME='"+this.username.toUpperCase()+"'");            
            while(resultSet.next()){
                String lastLogin = resultSet.getString("LAST_LOGIN");
                lbltime.setText("Lần cuối đăng nhập: "+lastLogin.toString());
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void initProcess(){
        ProcessForm PF=new ProcessForm();
        PF.setVisible(true);
        PF.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnFile = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnFolders = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnDangxuat = new javax.swing.JButton();
        lblHienthi = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbltime = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        SessionMenu = new javax.swing.JMenuItem();
        MenuKillsession = new javax.swing.JMenuItem();
        ProcessMenu = new javax.swing.JMenuItem();
        DataspaceMenu = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem3.setText("jMenuItem3");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/folder.png"))); // NOI18N
        btnFile.setText("File");
        btnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/file.png"))); // NOI18N

        btnFolders.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/folders.png"))); // NOI18N
        btnFolders.setText("Folders");
        btnFolders.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnFolders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFoldersActionPerformed(evt);
            }
        });

        jButton1.setText("Trang chủ");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        btnDangxuat.setText("Đăng xuất");
        btnDangxuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangxuatActionPerformed(evt);
            }
        });

        lblHienthi.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblHienthi.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnFolders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(btnDangxuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblHienthi))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHienthi)
                .addGap(11, 11, 11)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFolders)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(btnDangxuat)
                .addGap(21, 21, 21))
        );

        btnFile.getAccessibleContext().setAccessibleName("btnFile");
        jButton1.getAccessibleContext().setAccessibleName("btnFolder");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbltime)
                .addGap(147, 147, 147))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbltime)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 255));

        jMenu1.setText("File");

        jMenuItem1.setText("Xóa thông tin");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sửa");

        jMenu5.setText("Phân quyền");

        jMenuItem10.setText("Phân quyền, hủy quyền user");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem10);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Phân quyền, hủy nhóm quyền");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jCheckBoxMenuItem1);

        jMenu2.add(jMenu5);

        jMenuItem9.setText("jMenuItem9");
        jMenu2.add(jMenuItem9);

        jMenuItem8.setText("jMenuItem8");
        jMenu2.add(jMenuItem8);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Thông số");

        jMenuItem11.setText("Thông số sga/pga");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem11);

        jMenu4.setText("Thông số Session");

        SessionMenu.setText("Thông tin Session");
        SessionMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SessionMenuActionPerformed(evt);
            }
        });
        jMenu4.add(SessionMenu);

        MenuKillsession.setText("Session đang hoạt động");
        MenuKillsession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuKillsessionActionPerformed(evt);
            }
        });
        jMenu4.add(MenuKillsession);

        ProcessMenu.setText("Thông tin Process");
        ProcessMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessMenuActionPerformed(evt);
            }
        });
        jMenu4.add(ProcessMenu);

        jMenu3.add(jMenu4);

        DataspaceMenu.setText("Thông tin Tablespace");
        DataspaceMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataspaceMenuActionPerformed(evt);
            }
        });
        jMenu3.add(DataspaceMenu);

        jMenuItem7.setText("Thông tin User");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem5.setText("Thông tin policy");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Thông tin audit");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem4.setText("Quản lý profile");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SessionMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SessionMenuActionPerformed
        SessionMethod();
    }//GEN-LAST:event_SessionMenuActionPerformed

    private void ProcessMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessMenuActionPerformed
           initProcess();
    }//GEN-LAST:event_ProcessMenuActionPerformed
    
    
    private static class CheckSessionWorker extends SwingWorker<Boolean, Void>{
        private final MainForm mainform;
        
        public CheckSessionWorker(MainForm mainform){
            this.mainform=mainform;
        }

        @Override
        protected Boolean doInBackground() throws Exception {
            String url = "jdbc:oracle:thin:@:1521:orcl";
            String username = "sys as sysdba";
            String password = "sys";
            boolean sessionExists = true;
            
            try (Connection connection3 = DriverManager.getConnection(url, username, password)) {
                while (sessionExists) {
                    try (CallableStatement cal = connection3.prepareCall("{call check_session(?, ?)}")) {
                        String currentUsername = mainform.username;
                        cal.setString(1, currentUsername.toUpperCase());
                        cal.registerOutParameter(2, OracleTypes.NUMBER);
                        cal.execute();
                        int sessionExistsNumber = cal.getInt(2);
                        sessionExists = (sessionExistsNumber == 1);
                        
                        cal.close();
                    }
                    Thread.sleep(1000);
                }
                return sessionExists;
            } catch (Exception e) {                
                e.printStackTrace();
                return false;
            }
        }
        
        @Override
        protected void done() {
            try {
                boolean sessionValid=get();
                if (!sessionValid) {
                    // Nếu session không tồn tại, đóng form và thoát ứng dụng
                    mainform.dispose();
                    System.exit(0);
                } else {
                    System.out.println("QLFIle.MainForm.CheckSessionWorker.done()");
                }
                
            } catch (InterruptedException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ExecutionException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
    }
    
    private void btnDangxuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangxuatActionPerformed
        try {
            CallableStatement disconnectProc = connection2.prepareCall("{call kill_user_sessions(?)}");
            disconnectProc.setString(1, username.toUpperCase());
            disconnectProc.execute();
            disconnectProc.close();

            connection2.close();
//            connection2.close();
//            connection2.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Failed to close connection. Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDangxuatActionPerformed

    private void DataspaceMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataspaceMenuActionPerformed
        DataspaceForm data=new DataspaceForm();
        data.setVisible(true);
        data.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_DataspaceMenuActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        InfomationSGAPGA information=new InfomationSGAPGA();
        information.setVisible(true);
        information.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        PolicyForm policyframe=new PolicyForm();
        policyframe.setVisible(true);
        policyframe.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        AuditForm auditframe=new AuditForm();
        auditframe.setVisible(true);
        auditframe.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        UserInformation userframe=new UserInformation();
        userframe.setVisible(true);
        userframe.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void btnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileActionPerformed
        
    }//GEN-LAST:event_btnFileActionPerformed

    private void btnFoldersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFoldersActionPerformed
        try {
            Statement statement = connection.createStatement();
            
            ResultSet resultSet = statement.executeQuery("SELECT * FROM FOLDERS");
         
            var data = new ArrayList<>();
            while (resultSet.next()) {
                int index = data.size() + 1;
                String[] row = new String[5];
                row[0] = String.valueOf(index++);
                row[1] = resultSet.getString("F_ID");
                row[2] = resultSet.getString("F_NAME");
                row[3] = resultSet.getString("F_FATHER");
                row[4] = resultSet.getString("F_DESCRIBE");
                data.add(row);
            }
            TableModel model = new DefaultTableModel(
                    data.toArray(new String[][] {}), // Convert to array of arrays
                    new String[] {"STT","F_ID", "F_NAME","F_FATHER","F_DESCRIBE"} // Set column names
            );
                jTable1.setModel(model);
        } catch (SQLException e) {
            e.printStackTrace();
        } 
    }//GEN-LAST:event_btnFoldersActionPerformed

    private void MenuKillsessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuKillsessionActionPerformed
       KillsessionForm killform=new KillsessionForm();
       killform.setVisible(true);
       killform.setLocationRelativeTo(null);
    }//GEN-LAST:event_MenuKillsessionActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        GrantUserForm grantuserform=new GrantUserForm();
        grantuserform.setVisible(true);
        grantuserform.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        NhomQuyenForm nhomquyenform=new NhomQuyenForm();
        nhomquyenform.setVisible(true);
        nhomquyenform.setLocationRelativeTo(null);
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        NotificationAudit f = new NotificationAudit("hr","hr");
        f.setVisible(true);
        f.setLocationRelativeTo(null);
//        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        CreateProfileUser u = new CreateProfileUser();
        u.setVisible(true);
        u.setLocationRelativeTo(null);
//        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
                //new KillsessionForm().setVisible(true);
            }
        });
    }
    
    private void SessionMethod() {
        try {
            Statement statement = connection2.createStatement();
            connection.close();
            //Tránh việc 2 connection cùng hiển thị thông tin
            ResultSet resultSet = statement.executeQuery("SELECT * FROM v$session where username='PROJECT'");
            while(resultSet.next()){            
                String sid=resultSet.getString("SID");
                String serial=resultSet.getString("SERIAL#");
                String username=resultSet.getString("USERNAME");
                String program=resultSet.getString("PROGRAM");
                
                String message = String.format("SID: %s%nSERIAL: %s%nUSERNAME: %s%nPROGRAM: %s", sid, serial, username, program);
                JOptionPane.showMessageDialog(null, message);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            sysConnection.closeConnection();
        }
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem DataspaceMenu;
    private javax.swing.JMenuItem MenuKillsession;
    private javax.swing.JMenuItem ProcessMenu;
    private javax.swing.JMenuItem SessionMenu;
    private javax.swing.JButton btnDangxuat;
    private javax.swing.JButton btnFile;
    private javax.swing.JButton btnFolders;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblHienthi;
    private javax.swing.JLabel lbltime;
    // End of variables declaration//GEN-END:variables
}
